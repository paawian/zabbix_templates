{
    "zabbix_export": {
        "version": "7.0",
        "template_groups": [
            {
                "uuid": "c2c162144c2d4c5491c8801193af4945",
                "name": "Templates/Cloud"
            }
        ],
        "host_groups": [
            {
                "uuid": "748ad4d098d447d492bb935c907f652f",
                "name": "Databases"
            },
            {
                "uuid": "137f19e6e2dc4219b33553b812627bc2",
                "name": "Virtual machines"
            }
        ],
        "templates": [
            {
                "uuid": "4e1e9372a5fe4297936210bc4fc4b1c0",
                "template": "GCP by HTTP",
                "name": "GCP by HTTP",
                "description": "Discover GCP Compute Engine/Cloud SQL Instances and Compute Engine project quota metrics.\nDon't forget to read the README.md for the correct setup of the template.\n\nYou can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback\n\n\nGenerated by official Zabbix template tool \"Templator\"",
                "vendor": {
                    "name": "Zabbix",
                    "version": "7.0-0"
                },
                "groups": [
                    {
                        "name": "Templates/Cloud"
                    }
                ],
                "items": [
                    {
                        "uuid": "b003e61fbede488a957b6c866ffaa9ba",
                        "name": "GCP: Authorization errors check",
                        "type": "DEPENDENT",
                        "key": "gcp.auth.err.check",
                        "delay": "0",
                        "history": "7d",
                        "value_type": "TEXT",
                        "trends": "0",
                        "description": "A list of errors from API requests.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.error"
                                ],
                                "error_handler": "CUSTOM_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.authorization"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "status"
                            }
                        ],
                        "triggers": [
                            {
                                "uuid": "74c0e16244314ab4a920e32faca50444",
                                "expression": "length(last(/GCP by HTTP/gcp.auth.err.check)) > 0",
                                "name": "GCP: Authorization has failed",
                                "priority": "AVERAGE",
                                "description": "GCP: Authorization has failed.\nCheck the authorization parameters and GCP API availability from a network segment, where Zabbix-server/proxy is located.",
                                "tags": [
                                    {
                                        "tag": "scope",
                                        "value": "availability"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "5cc3faa82f404b38b513958f323f3d7d",
                        "name": "GCP: Authorization",
                        "type": "SCRIPT",
                        "key": "gcp.authorization",
                        "delay": "{$GCP.AUTH.FREQUENCY}",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "params": "var auth_url = 'https://oauth2.googleapis.com/token',\n\tissued = Math.floor(new Date().getTime() / 1000),\n\texpires = issued + 3600,\n\tendpoint = 'https://www.googleapis.com/auth/',\n\tscopes = ['cloud-platform.read-only', 'monitoring', 'compute.readonly', 'sqlservice.admin'],\n\tscope = scopes.map(function (path) { return endpoint + path; }).join(' ');\n\nfunction base64url(source) {\n\tencodedSource = btoa(source);\n\tencodedSource = encodedSource.replace(/=+$/, '');\n\tencodedSource = encodedSource.replace(/\\+/g, '-');\n\tencodedSource = encodedSource.replace(/\\//g, '_');\n\n\treturn encodedSource;\n}\n\nfunction fromHex(hex) {\n\tvar utf8array = [];\n\n\tif (hex.length % 2)\n\t\tthrow 'Invalid length of a hex string!';\n\tfor (var i = 0; i < hex.length; i += 2) {\n\t\tutf8array.push(parseInt(hex.substr(i, 2), 16));\n\t}\n\treturn new Uint8Array(utf8array);\n}\n\nfunction encodeJWT(headers, payload, secret) {\n\tunsignedToken = base64url(JSON.stringify(headers)) + '.' + base64url(JSON.stringify(payload));\n\tjwt = unsignedToken + '.' + base64url(fromHex(sign('sha256', secret, unsignedToken)));\n\treturn jwt;\n}\n\nfunction exchangeJwtForAccessToken(signed_jwt) {\n\n\tvar request = new HttpRequest(),\n\t\tparams = {\n\t\t\tgrant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n\t\t\tassertion: signed_jwt\n\t\t}\n\tif (typeof script_params.proxy !== 'undefined' && script_params.proxy !== '') {\n\t\trequest.setProxy(script_params.proxy);\n\t};\n\tvar response = request.post(auth_url, JSON.stringify(params));\n\n\tZabbix.log(4, '[ GCP API ] [ ' + auth_url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);\n\n\tif (response !== null) {\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse response received from GCP API. Check debug log for more information.';\n\t\t}\n\t}\n\n\tif (typeof response !== 'object' || response === null) {\n\t\tthrow 'Cannot process response data: received data is not an object. Check debug log for more information.';\n\t}\n\n\tif (request.getStatus() !== 200) {\n\t\tif (typeof (response.error && response.error.message) !== 'undefined') {\n\t\t\tthrow response.error.message;\n\t\t}\n\t\telse {\n\t\t\tthrow 'Failed to receive data: invalid response status code. Check debug log for more information.';\n\t\t}\n\t}\n\n\n\tif (typeof response.access_token !== 'undefined') {\n\t\treturn response.access_token;\n\t}\n\telse {\n\t\tthrow 'No access token in the JWT exchange request.';\n\t}\n}\n\nfunction checkParams(params) {\n\t['pkey_id', 'private_key', 'email'].forEach(function (field) {\n\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\tthrow 'Required param is not set: ' + field + '.';\n\t\t}\n\t});\n\treturn params;\n}\n\nvar script_params = checkParams(JSON.parse(value)),\n\theaders = {\n\t\talg: 'RS256',\n\t\tkid: script_params.pkey_id,\n\t\ttyp: 'JWT'\n\t},\n\tpayload = {\n\t\tiss: script_params.email,\n\t\tsub: script_params.email,\n\t\taud: auth_url,\n\t\tiat: issued,\n\t\texp: expires,\n\t\tscope: scope\n\t};\n\ntry {\n\tjwt = encodeJWT(headers, payload, script_params.private_key);\n\ttoken = exchangeJwtForAccessToken(jwt);\n\treturn token;\n}\ncatch (err) {\n\treturn JSON.stringify({ error: err });\n}",
                        "description": "Google Cloud Platform REST authorization with service account authentication parameters and temporary-generated RSA-based JWT-token usage.\nThe necessary scopes are pre-defined.\nReturns a signed authorization token with 1 hour lifetime; it is required only once, and is used for all the dependent script items.\nCheck the template documentation for the details.",
                        "timeout": "{$GCP.DATA.TIMEOUT}",
                        "parameters": [
                            {
                                "name": "email",
                                "value": "{$GCP.CLIENT.EMAIL}"
                            },
                            {
                                "name": "pkey_id",
                                "value": "{$GCP.PRIVATE.KEY.ID}"
                            },
                            {
                                "name": "private_key",
                                "value": "{$GCP.PRIVATE.KEY}"
                            },
                            {
                                "name": "proxy",
                                "value": "{$GCP.PROXY}"
                            }
                        ],
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    },
                    {
                        "uuid": "3ac5c859692140c0b686e772efa05032",
                        "name": "Instances get",
                        "type": "DEPENDENT",
                        "key": "gcp.cloudsql.instances.get",
                        "delay": "0",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "description": "GCP Cloud SQL: Instances get.",
                        "preprocessing": [
                            {
                                "type": "JAVASCRIPT",
                                "parameters": [
                                    "var token = value;\n\nfunction getField(data, path) {\n\tvar steps = path.split('.');\n\tfor (var i = 0; i < steps.length; i++) {\n\t\tvar step = steps[i];\n\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\tthrow 'Required field \"' + path + '\" is not present in data received.';\n\t\t}\n\t\tdata = data[step];\n\t}\n\treturn data;\n}\n\nfunction getFieldBool(data, path) {\n\tvar steps = path.split('.');\n\n\tfor (var i = 0; i < steps.length; i++) {\n\t\tvar step = steps[i];\n\n\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t\tdata = data[step];\n\t}\n\treturn true;\n}\n\nfunction getHttpData(url, token) {\n\tvar request = new HttpRequest(),\n\t\tproxy = '{$GCP.PROXY}';\n\tif (proxy !== '{' + '$GCP.PROXY}' && proxy !== '') {\n\t\trequest.setProxy(proxy);\n\t};\n\trequest.addHeader('Authorization: Bearer ' + token);\n\trequest.addHeader('Content-Type: application/json');\n\n\tvar response = request.get(url);\n\n\tZabbix.log(4, '[ GCP API ] [ ' + url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);\n\n\tif (response !== null) {\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse response received from GCP API. Check debug log for more information.';\n\t\t}\n\t}\n\n\tif (typeof response !== 'object' || response === null) {\n\t\tthrow 'Cannot process response data: received data is not an object. Check debug log for more information.';\n\t}\n\n\tif (request.getStatus() !== 200) {\n\t\tif (typeof (response.error && response.error.message) !== 'undefined') {\n\t\t\tthrow response.error.message;\n\t\t}\n\t\telse {\n\t\t\tthrow 'Failed to receive data: invalid response status code. Check debug log for more information.';\n\t\t}\n\t}\n\treturn response;\n};\n\nvar project = '{$GCP.PROJECT.ID}';\n\nif (!project || project === '{' + '$GCP.PROJECT.ID}') {\n\tthrow 'Error. Set the \\{$GCP.PROJECT.ID\\} macro value.';\n}\n\nvar inst_raw = getHttpData('https://sqladmin.googleapis.com/sql/v1beta4/projects/' + project + '/instances', token);\n\nif (Object.keys(inst_raw).length === 0) {\n\treturn '[]';\n}\n\nreturn JSON.stringify(getField(inst_raw, 'items').map(function (sql_inst) {\n\tobj = {\n\t\tname: getField(sql_inst, 'name'),\n\t\ttoken: value,\n\t\tzone: getField(sql_inst, 'settings.locationPreference.zone'),\n\t\tinst_type: getField(sql_inst, 'instanceType'),\n\t\ttier: getField(sql_inst, 'settings.tier'),\n\t\tproject_id: getField(sql_inst, 'project'),\n\t\tdb_type: getField(sql_inst, 'databaseInstalledVersion')\n\t};\n\n\tobj.high_availability = (sql_inst.failoverReplica) ? true : false;\n\n\tif (obj.db_type.match(/SQLSERVER*/)) {\n\t\tvar mssql_audit = getField(sql_inst, 'settings.sqlServerAuditConfig');\n\n\t\tobj.audited = (mssql_audit.bucket) ? true : false;\n\t}\n\n\tif (obj.inst_type === 'READ_REPLICA_INSTANCE') {\n\t\tobj.master = getField(sql_inst, 'masterInstanceName');\n\t}\n\n\tif (Array.isArray(sql_inst.ipAddresses)) {\n\t\tvar int_addresses = sql_inst.ipAddresses.filter(function (addr) {\n\t\t\treturn addr.type === 'PRIVATE';\n\t\t});\n\n\t\tvar ext_addresses = sql_inst.ipAddresses.filter(function (addr) {\n\t\t\treturn addr.type === 'PRIMARY';\n\t\t});\n\n\t\tobj.ip = getFieldBool(int_addresses, '0.ipAddress') ? int_addresses[0].ipAddress : '0.0.0.0';\n\t\tobj.ext_ip = getFieldBool(ext_addresses, '0.ipAddress') ? ext_addresses[0].ipAddress : '0.0.0.0';\n\t}\n\telse {\n\t\tobj.ip = '0.0.0.0';\n\t\tobj.ext_ip = '0.0.0.0';\n\t}\n\n\treturn obj;\n}));"
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.authorization"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    },
                    {
                        "uuid": "b926ba1901c5413396c1c071e6e76072",
                        "name": "Instances total",
                        "type": "DEPENDENT",
                        "key": "gcp.cloudsql.instances.total",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Cloud SQL instances total count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.[*].length()"
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "58329c9a5b124b1990c94f15266e6edf",
                        "name": "Container-Optimized instances count",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.cos_count",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Compute Engine: count of instances with Container-Optimized OS used.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$[?(@.i_type == 'container-optimized')].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.gce.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "461e72fb7e104261831455ae3cc87358",
                        "name": "Instances get",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.get",
                        "delay": "0",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "description": "Get GCP Compute Engine instances.",
                        "preprocessing": [
                            {
                                "type": "JAVASCRIPT",
                                "parameters": [
                                    "var token = value;\nfunction checkMacro(macro) {\n\tif (!macro || macro.match(/^\\{\\$.*\\}$/)) {\n\t\tthrow 'The GCP project id is not defined. Please, set the value for the \\{$GCP.PROJECT.ID\\} macro.';\n\t}\n\treturn macro;\n}\n\nfunction getField(data, path) {\n\tvar steps = path.split('.');\n\n\tfor (var i = 0; i < steps.length; i++) {\n\t\tvar step = steps[i];\n\n\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\tthrow 'Required field \"' + path + '\" is not present in data received.';\n\t\t}\n\t\tdata = data[step];\n\t}\n\treturn data;\n}\n\nfunction getFieldBool(data, path) {\n\tvar steps = path.split('.');\n\n\tfor (var i = 0; i < steps.length; i++) {\n\t\tvar step = steps[i];\n\n\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\t\tdata = data[step];\n\t}\n\treturn true;\n}\n\n\nfunction getHttpData(url, token) {\n\tvar request = new HttpRequest(),\n\t\tproxy = '{$GCP.PROXY}';\n\tif (proxy !== '{' + '$GCP.PROXY}' && proxy !== '') {\n\t\trequest.setProxy(proxy);\n\t};\n\trequest.addHeader('Authorization: Bearer ' + token);\n\trequest.addHeader('Content-Type: application/json');\n\n\tvar response = request.get(url);\n\n\tZabbix.log(4, '[ GCP API ] [ ' + url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);\n\n\tif (response !== null) {\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse response received from GCP API. Check debug log for more information.';\n\t\t}\n\t}\n\n\tif (typeof response !== 'object' || response === null) {\n\t\tthrow 'Cannot process response data: received data is not an object. Check debug log for more information.';\n\t}\n\n\tif (request.getStatus() !== 200) {\n\t\tif (typeof (response.error && response.error.message) !== 'undefined') {\n\t\t\tthrow response.error.message;\n\t\t}\n\t\telse {\n\t\t\tthrow 'Failed to receive data: invalid response status code. Check debug log for more information.';\n\t\t}\n\t}\n\treturn response;\n};\n\nvar project = '{$GCP.PROJECT.ID}';\n\nif (!project || project === '{' + '$GCP.PROJECT.ID}') {\n\tthrow 'Error. Set the \\{$GCP.PROJECT.ID\\} macro value.';\n}\n\nvar result = getHttpData('https://compute.googleapis.com/compute/v1/projects/' + project + '/aggregated/instances', token),\n\tvms_raw = getField(result, 'items'),\n\tkeys = Object.keys(vms_raw),\n\tarr = [];\n\nfor (var i in keys) {\n\tif (typeof vms_raw[keys[i]].instances !== 'undefined') {\n\t\tvar vm_prop = vms_raw[keys[i]].instances.map(function setProp(inst) {\n\t\t\tobj = {\n\t\t\t\tid: getField(inst, 'id'),\n\t\t\t\tname: getField(inst, 'name'),\n\t\t\t\ttoken: value,\n\t\t\t\tzone: keys[i].replace(/zones\\//, ''),\n\t\t\t\tm_type: getField(inst, 'machineType').replace(/.*machineTypes\\//g, ''),\n\t\t\t\tstate: getField(inst, 'status'),\n\t\t\t\tproject_id: '{$GCP.PROJECT.ID}',\n\t\t\t\tip: getField(inst, 'networkInterfaces.0.networkIP'),\n\t\t\t\tintegrity: getField(inst, 'shieldedInstanceConfig.enableIntegrityMonitoring')\n\t\t\t};\n\n\t\t\tobj.ext_ip = getFieldBool(inst, 'networkInterfaces.0.accessConfigs.0.natIP') ? inst.networkInterfaces[0].accessConfigs[0].natIP : '0.0.0.0';\n\t\t\tobj.i_type = getFieldBool(inst, 'labels.container-vm') ? 'container-optimized' : 'regular';\n\t\t\treturn obj;\n\t\t});\n\t\tarr = arr.concat(vm_prop);\n\t}\n}\nreturn JSON.stringify(arr);"
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.authorization"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    },
                    {
                        "uuid": "80687b35246b45ffa1be9d171f686e94",
                        "name": "Instances count",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.mssql_count",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Cloud SQL MSSQL instances count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$[?(@.db_type =~ 'SQLSERVER')].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "8ec94dff7a3b47998242d97a18cf0821",
                        "name": "Instances count",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.mysql_count",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Cloud SQL MySQL instances count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$[?(@.db_type =~ 'MYSQL')].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "de284dd30b2d4ecb9f7d0cf3ca80a094",
                        "name": "Instances count",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.pgsql_count",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Cloud SQL PostgreSQL instances count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$[?(@.db_type =~ 'POSTGRES')].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "a936207f9d914955b2e2140e953f22f2",
                        "name": "Regular instances count",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.regular_count",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Compute Engine: Regular instances count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$[?(@.i_type == 'regular')].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.gce.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "46eaeccd1f43466caadd44440da88568",
                        "name": "Instances total",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.instances.total",
                        "delay": "0",
                        "history": "7d",
                        "trends": "90d",
                        "description": "GCP Compute Engine instances total count.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.[*].length()"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            }
                        ],
                        "master_item": {
                            "key": "gcp.gce.instances.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "environment"
                            }
                        ]
                    },
                    {
                        "uuid": "c4f17331815345bcb0ac6ea98413b2b5",
                        "name": "Project quotas get",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.quotas.get",
                        "delay": "0",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "description": "GCP Compute Engine resource quotas available for the particular project.",
                        "preprocessing": [
                            {
                                "type": "JAVASCRIPT",
                                "parameters": [
                                    "var token = value;\n\nfunction checkMacro(macro) {\n\tif (!macro || macro.match(/^\\{\\$.*\\}$/)) {\n\t\tthrow 'The GCP project id is not defined. Please, set the value for the \\{$GCP.PROJECT.ID\\} macro.';\n\t}\n\treturn macro;\n}\n\nfunction getField(data, path) {\n\tvar steps = path.split('.');\n\n\tfor (var i = 0; i < steps.length; i++) {\n\t\tvar step = steps[i];\n\n\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\tthrow 'Required field \"' + path + '\" is not present in data received.'\n\t\t}\n\t\tdata = data[step];\n\t}\n\treturn data;\n}\n\nfunction getHttpData(url, token) {\n\tvar request = new HttpRequest(),\n\t\tproxy = '{$GCP.PROXY}';\n\tif (proxy !== '{' + '$GCP.PROXY}' && proxy !== '') {\n\t\trequest.setProxy(proxy);\n\t};\n\trequest.addHeader('Authorization: Bearer ' + token);\n\trequest.addHeader('Content-Type: application/json');\n\n\tvar response = request.get(url);\n\n\tZabbix.log(4, '[ GCP API ] [ ' + url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);\n\n\tif (response !== null) {\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse response received from GCP API. Check debug log for more information.';\n\t\t}\n\t}\n\n\tif (typeof response !== 'object' || response === null) {\n\t\tthrow 'Cannot process response data: received data is not an object. Check debug log for more information.';\n\t}\n\n\tif (request.getStatus() !== 200) {\n\t\tif (typeof (response.error && response.error.message) !== 'undefined') {\n\t\t\tthrow response.error.message;\n\t\t}\n\t\telse {\n\t\t\tthrow 'Failed to receive data: invalid response status code. Check debug log for more information.';\n\t\t}\n\t}\n\n\tif (typeof response.quotas !== 'undefined') {\n\t\treturn response;\n\t} else {\n\t\tthrow 'No quotas array in API response';\n\t}\n};\nvar project = checkMacro('{$GCP.PROJECT.ID}'),\n\tqts_raw = getHttpData('https://www.googleapis.com/compute/v1/projects/' + project, token),\n\tqts_lst = getField(qts_raw, 'quotas').map(function (qt) {\n\t\tobj = {\n\t\t\tmetric: getField(qt, 'metric'),\n\t\t\tlimit: getField(qt, 'limit'),\n\t\t\tusage: getField(qt, 'usage'),\n\t\t\tp_used: (qt.usage / qt.limit) * 100\n\t\t};\n\t\treturn obj;\n\t});\n\nreturn JSON.stringify(qts_lst);"
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.authorization"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    }
                ],
                "discovery_rules": [
                    {
                        "uuid": "f210e8e38c194c65b30e74610ec2b86f",
                        "name": "GCP Cloud SQL: MSSQL instances discovery",
                        "type": "DEPENDENT",
                        "key": "gcp.cloudsql.mssql.inst.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                    "value": "SQLSERVER.*",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.MSSQL.INST.NAME.MATCHES}",
                                    "formulaid": "B"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.MSSQL.INST.NAME.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "C"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.MSSQL.INST.TYPE.MATCHES}",
                                    "formulaid": "D"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.MSSQL.INST.TYPE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "E"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.MSSQL.ZONE.MATCHES}",
                                    "formulaid": "F"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.MSSQL.ZONE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "G"
                                }
                            ]
                        },
                        "description": "GCP Cloud SQL: MSSQL instances discovery.",
                        "host_prototypes": [
                            {
                                "uuid": "edc6ab9314ed410b8a3cf6bfedff51ab",
                                "host": "{#GCP.PROJECT.ID}-{#CLOUD_SQL.INSTANCE.NAME}",
                                "name": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "group_links": [
                                    {
                                        "group": {
                                            "name": "Databases"
                                        }
                                    }
                                ],
                                "templates": [
                                    {
                                        "name": "GCP Cloud SQL MSSQL by HTTP"
                                    }
                                ],
                                "macros": [
                                    {
                                        "macro": "{$CLOUD_SQL.HIGH.AVAILABILITY}",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                        "description": "GCP Cloud SQL instance high availability definition. Required for metrics filtration."
                                    },
                                    {
                                        "macro": "{$CLOUD_SQL.MSSQL.AUDITED}",
                                        "value": "{#MSSQL.AUDITED}",
                                        "description": "GCP Cloud SQL MSSQL audit enabled definition. Required for metrics filtration."
                                    },
                                    {
                                        "macro": "{$GCP.AUTH.TOKEN}",
                                        "value": "{#GCP.AUTH.TOKEN}",
                                        "description": "Google Cloud Platform authorization token."
                                    },
                                    {
                                        "macro": "{$GCP.PROJECT.ID}",
                                        "value": "{#GCP.PROJECT.ID}",
                                        "description": "GCP Project Id."
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "audit",
                                        "value": "{#MSSQL.AUDITED}"
                                    },
                                    {
                                        "tag": "db-version",
                                        "value": "{#CLOUD_SQL.INSTANCE.DB.TYPE}"
                                    },
                                    {
                                        "tag": "high-availability",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}"
                                    },
                                    {
                                        "tag": "instance-type",
                                        "value": "{#CLOUD_SQL.INSTANCE.TYPE}"
                                    },
                                    {
                                        "tag": "project",
                                        "value": "{#GCP.PROJECT.ID}"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "cloudsql"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "gcp"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "mssql"
                                    },
                                    {
                                        "tag": "tier",
                                        "value": "{#CLOUD_SQL.INSTANCE.TIER}"
                                    },
                                    {
                                        "tag": "zone",
                                        "value": "{#CLOUD_SQL.INSTANCE.ZONE}"
                                    }
                                ],
                                "custom_interfaces": "YES",
                                "interfaces": [
                                    {
                                        "default": "NO",
                                        "ip": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                        "dns": "external.ip"
                                    },
                                    {
                                        "ip": "{#CLOUD_SQL.INSTANCE.IP}",
                                        "dns": "internal.ip"
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                "path": "$.db_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                "path": "$.ext_ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                "path": "$.high_availability"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.IP}",
                                "path": "$.ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "path": "$.name"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TIER}",
                                "path": "$.tier"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                "path": "$.inst_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                "path": "$.zone"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.MASTER}",
                                "path": "$.master"
                            },
                            {
                                "lld_macro": "{#GCP.AUTH.TOKEN}",
                                "path": "$.token"
                            },
                            {
                                "lld_macro": "{#GCP.PROJECT.ID}",
                                "path": "$.project_id"
                            },
                            {
                                "lld_macro": "{#MSSQL.AUDITED}",
                                "path": "$.audited"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "3h"
                                ]
                            }
                        ],
                        "overrides": [
                            {
                                "name": "MSSQL replica",
                                "step": "1",
                                "filter": {
                                    "conditions": [
                                        {
                                            "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                            "value": "READ_REPLICA_INSTANCE",
                                            "formulaid": "A"
                                        },
                                        {
                                            "macro": "{#CLOUD_SQL.MASTER}",
                                            "operator": "EXISTS",
                                            "formulaid": "B"
                                        }
                                    ]
                                },
                                "operations": [
                                    {
                                        "operationobject": "HOST_PROTOTYPE",
                                        "operator": "REGEXP",
                                        "tags": [
                                            {
                                                "tag": "master_instance",
                                                "value": "{#CLOUD_SQL.MASTER}"
                                            }
                                        ],
                                        "templates": [
                                            {
                                                "name": "GCP Cloud SQL MSSQL Replica by HTTP"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "3fdd2543936a4587b1bfb5dabb30c1f6",
                        "name": "GCP Cloud SQL: MySQL instances discovery",
                        "type": "DEPENDENT",
                        "key": "gcp.cloudsql.mysql.inst.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                    "value": "MYSQL.*",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.MYSQL.INST.NAME.MATCHES}",
                                    "formulaid": "B"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.MYSQL.INST.NAME.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "C"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.MYSQL.INST.TYPE.MATCHES}",
                                    "formulaid": "D"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.MYSQL.INST.TYPE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "E"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.MYSQL.ZONE.MATCHES}",
                                    "formulaid": "F"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.MYSQL.ZONE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "G"
                                }
                            ]
                        },
                        "description": "GCP Cloud SQL: MySQL instances discovery.",
                        "host_prototypes": [
                            {
                                "uuid": "8b2556b881b14b86a98f90a447ae9734",
                                "host": "{#GCP.PROJECT.ID}-{#CLOUD_SQL.INSTANCE.NAME}",
                                "name": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "group_links": [
                                    {
                                        "group": {
                                            "name": "Databases"
                                        }
                                    }
                                ],
                                "templates": [
                                    {
                                        "name": "GCP Cloud SQL MySQL by HTTP"
                                    }
                                ],
                                "macros": [
                                    {
                                        "macro": "{$CLOUD_SQL.HIGH.AVAILABILITY}",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                        "description": "GCP Cloud SQL instance high availability definition."
                                    },
                                    {
                                        "macro": "{$GCP.AUTH.TOKEN}",
                                        "value": "{#GCP.AUTH.TOKEN}",
                                        "description": "Google Cloud Platform authorization token."
                                    },
                                    {
                                        "macro": "{$GCP.PROJECT.ID}",
                                        "value": "{#GCP.PROJECT.ID}",
                                        "description": "GCP Project Id."
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "db-version",
                                        "value": "{#CLOUD_SQL.INSTANCE.DB.TYPE}"
                                    },
                                    {
                                        "tag": "high-availability",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}"
                                    },
                                    {
                                        "tag": "instance-type",
                                        "value": "{#CLOUD_SQL.INSTANCE.TYPE}"
                                    },
                                    {
                                        "tag": "project",
                                        "value": "{#GCP.PROJECT.ID}"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "cloudsql"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "gcp"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "mysql"
                                    },
                                    {
                                        "tag": "tier",
                                        "value": "{#CLOUD_SQL.INSTANCE.TIER}"
                                    },
                                    {
                                        "tag": "zone",
                                        "value": "{#CLOUD_SQL.INSTANCE.ZONE}"
                                    }
                                ],
                                "custom_interfaces": "YES",
                                "interfaces": [
                                    {
                                        "default": "NO",
                                        "ip": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                        "dns": "external.ip"
                                    },
                                    {
                                        "ip": "{#CLOUD_SQL.INSTANCE.IP}",
                                        "dns": "internal.ip"
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                "path": "$.db_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                "path": "$.ext_ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                "path": "$.high_availability"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.IP}",
                                "path": "$.ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "path": "$.name"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TIER}",
                                "path": "$.tier"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                "path": "$.inst_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                "path": "$.zone"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.MASTER}",
                                "path": "$.master"
                            },
                            {
                                "lld_macro": "{#GCP.AUTH.TOKEN}",
                                "path": "$.token"
                            },
                            {
                                "lld_macro": "{#GCP.PROJECT.ID}",
                                "path": "$.project_id"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "3h"
                                ]
                            }
                        ],
                        "overrides": [
                            {
                                "name": "MySQL replica",
                                "step": "1",
                                "filter": {
                                    "conditions": [
                                        {
                                            "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                            "value": "READ_REPLICA_INSTANCE",
                                            "formulaid": "A"
                                        },
                                        {
                                            "macro": "{#CLOUD_SQL.MASTER}",
                                            "operator": "EXISTS",
                                            "formulaid": "B"
                                        }
                                    ]
                                },
                                "operations": [
                                    {
                                        "operationobject": "HOST_PROTOTYPE",
                                        "operator": "REGEXP",
                                        "tags": [
                                            {
                                                "tag": "master_instance",
                                                "value": "{#CLOUD_SQL.MASTER}"
                                            }
                                        ],
                                        "templates": [
                                            {
                                                "name": "GCP Cloud SQL MySQL Replica by HTTP"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "606ba15087894f268f4b626590b7a9d0",
                        "name": "GCP Cloud SQL: PostgreSQL instances discovery",
                        "type": "DEPENDENT",
                        "key": "gcp.cloudsql.pgsql.inst.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                    "value": "POSTGRES.*",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.PGSQL.INST.NAME.MATCHES}",
                                    "formulaid": "B"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                    "value": "{$GCP.PGSQL.INST.NAME.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "C"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.PGSQL.INST.TYPE.MATCHES}",
                                    "formulaid": "D"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                    "value": "{$GCP.PGSQL.TYPE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "E"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.PGSQL.ZONE.MATCHES}",
                                    "formulaid": "F"
                                },
                                {
                                    "macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                    "value": "{$GCP.PGSQL.ZONE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "G"
                                }
                            ]
                        },
                        "description": "GCP Cloud SQL: PostgreSQL instances discovery.",
                        "host_prototypes": [
                            {
                                "uuid": "0fbbc550fda448d39aad6d0710f28b6a",
                                "host": "{#GCP.PROJECT.ID}-{#CLOUD_SQL.INSTANCE.NAME}",
                                "name": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "group_links": [
                                    {
                                        "group": {
                                            "name": "Databases"
                                        }
                                    }
                                ],
                                "templates": [
                                    {
                                        "name": "GCP Cloud SQL PostgreSQL by HTTP"
                                    }
                                ],
                                "macros": [
                                    {
                                        "macro": "{$CLOUD_SQL.HIGH.AVAILABILITY}",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                        "description": "GCP Cloud SQL instance high availability definition."
                                    },
                                    {
                                        "macro": "{$GCP.AUTH.TOKEN}",
                                        "value": "{#GCP.AUTH.TOKEN}",
                                        "description": "Google Cloud Platform authorization token."
                                    },
                                    {
                                        "macro": "{$GCP.PROJECT.ID}",
                                        "value": "{#GCP.PROJECT.ID}",
                                        "description": "GCP project id."
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "db-version",
                                        "value": "{#CLOUD_SQL.INSTANCE.DB.TYPE}"
                                    },
                                    {
                                        "tag": "high-availability",
                                        "value": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}"
                                    },
                                    {
                                        "tag": "instance-type",
                                        "value": "{#CLOUD_SQL.INSTANCE.TYPE}"
                                    },
                                    {
                                        "tag": "project",
                                        "value": "{#GCP.PROJECT.ID}"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "cloudsql"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "gcp"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "pgsql"
                                    },
                                    {
                                        "tag": "tier",
                                        "value": "{#CLOUD_SQL.INSTANCE.TIER}"
                                    },
                                    {
                                        "tag": "zone",
                                        "value": "{#CLOUD_SQL.INSTANCE.ZONE}"
                                    }
                                ],
                                "custom_interfaces": "YES",
                                "interfaces": [
                                    {
                                        "default": "NO",
                                        "ip": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                        "dns": "external.ip"
                                    },
                                    {
                                        "ip": "{#CLOUD_SQL.INSTANCE.IP}",
                                        "dns": "internal.ip"
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.cloudsql.instances.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.DB.TYPE}",
                                "path": "$.db_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.EXT.IP}",
                                "path": "$.ext_ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.HIGH.AVAIL}",
                                "path": "$.high_availability"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.IP}",
                                "path": "$.ip"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.NAME}",
                                "path": "$.name"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TIER}",
                                "path": "$.tier"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                "path": "$.inst_type"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.INSTANCE.ZONE}",
                                "path": "$.zone"
                            },
                            {
                                "lld_macro": "{#CLOUD_SQL.MASTER}",
                                "path": "$.master"
                            },
                            {
                                "lld_macro": "{#GCP.AUTH.TOKEN}",
                                "path": "$.token"
                            },
                            {
                                "lld_macro": "{#GCP.PROJECT.ID}",
                                "path": "$.project_id"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "3h"
                                ]
                            }
                        ],
                        "overrides": [
                            {
                                "name": "PostgreSQL replica",
                                "step": "1",
                                "filter": {
                                    "conditions": [
                                        {
                                            "macro": "{#CLOUD_SQL.INSTANCE.TYPE}",
                                            "value": "READ_REPLICA_INSTANCE",
                                            "formulaid": "A"
                                        },
                                        {
                                            "macro": "{#CLOUD_SQL.MASTER}",
                                            "operator": "EXISTS",
                                            "formulaid": "B"
                                        }
                                    ]
                                },
                                "operations": [
                                    {
                                        "operationobject": "HOST_PROTOTYPE",
                                        "operator": "REGEXP",
                                        "tags": [
                                            {
                                                "tag": "master_instance",
                                                "value": "{#CLOUD_SQL.MASTER}"
                                            }
                                        ],
                                        "templates": [
                                            {
                                                "name": "GCP Cloud SQL PostgreSQL Replica by HTTP"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "7d0226eccc5644c89fff10f7ece1c8b4",
                        "name": "GCP Compute Engine: Instances discovery",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.inst.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#GCE.INSTANCE.NAME}",
                                    "value": "{$GCP.GCE.INST.NAME.MATCHES}",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#GCE.INSTANCE.NAME}",
                                    "value": "{$GCP.GCE.INST.NAME.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "B"
                                },
                                {
                                    "macro": "{#GCE.INSTANCE.ZONE}",
                                    "value": "{$GCP.GCE.ZONE.MATCHES}",
                                    "formulaid": "C"
                                },
                                {
                                    "macro": "{#GCE.INSTANCE.ZONE}",
                                    "value": "{$GCP.GCE.ZONE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "D"
                                }
                            ]
                        },
                        "description": "GCP Compute Engine: Instances discovery.",
                        "host_prototypes": [
                            {
                                "uuid": "cb22d82a12814afb8ba833c649d575c4",
                                "host": "{#GCE.INSTANCE.ID}",
                                "name": "{#GCE.INSTANCE.NAME}",
                                "group_links": [
                                    {
                                        "group": {
                                            "name": "Virtual machines"
                                        }
                                    }
                                ],
                                "templates": [
                                    {
                                        "name": "GCP Compute Engine Instance by HTTP"
                                    }
                                ],
                                "macros": [
                                    {
                                        "macro": "{$GCE.INSTANCE.ZONE}",
                                        "value": "{#GCE.INSTANCE.ZONE}",
                                        "description": "Instance zone (location)."
                                    },
                                    {
                                        "macro": "{$GCE.INTEGRITY.STATE}",
                                        "value": "{#GCE.INTEGRITY.STATE}",
                                        "description": "Instance integrity metrics status."
                                    },
                                    {
                                        "macro": "{$GCE.MACHINE.TYPE}",
                                        "value": "{#GCE.MACHINE.TYPE}",
                                        "description": "Instance machine type."
                                    },
                                    {
                                        "macro": "{$GCP.AUTH.TOKEN}",
                                        "value": "{#GCP.AUTH.TOKEN}",
                                        "description": "Google Cloud Platform authorization token."
                                    },
                                    {
                                        "macro": "{$GCP.PROJECT.ID}",
                                        "value": "{#GCP.PROJECT.ID}",
                                        "description": "GCP project id."
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "instance-type",
                                        "value": "{#GCE.INSTANCE.TYPE}"
                                    },
                                    {
                                        "tag": "machine-type",
                                        "value": "{#GCE.MACHINE.TYPE}"
                                    },
                                    {
                                        "tag": "project",
                                        "value": "{#GCP.PROJECT.ID}"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "gce"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "gcp"
                                    },
                                    {
                                        "tag": "zone",
                                        "value": "{#GCE.INSTANCE.ZONE}"
                                    }
                                ],
                                "custom_interfaces": "YES",
                                "interfaces": [
                                    {
                                        "default": "NO",
                                        "ip": "{#GCE.INSTANCE.EXT.IP}",
                                        "dns": "external.ip"
                                    },
                                    {
                                        "ip": "{#GCE.INSTANCE.IP}",
                                        "dns": "internal.ip"
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.gce.instances.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#GCE.INSTANCE.EXT.IP}",
                                "path": "$.ext_ip"
                            },
                            {
                                "lld_macro": "{#GCE.INSTANCE.ID}",
                                "path": "$.id"
                            },
                            {
                                "lld_macro": "{#GCE.INSTANCE.IP}",
                                "path": "$.ip"
                            },
                            {
                                "lld_macro": "{#GCE.INSTANCE.NAME}",
                                "path": "$.name"
                            },
                            {
                                "lld_macro": "{#GCE.INSTANCE.TYPE}",
                                "path": "$.i_type"
                            },
                            {
                                "lld_macro": "{#GCE.INSTANCE.ZONE}",
                                "path": "$.zone"
                            },
                            {
                                "lld_macro": "{#GCE.INTEGRITY.STATE}",
                                "path": "$.integrity"
                            },
                            {
                                "lld_macro": "{#GCE.MACHINE.TYPE}",
                                "path": "$.m_type"
                            },
                            {
                                "lld_macro": "{#GCP.AUTH.TOKEN}",
                                "path": "$.token"
                            },
                            {
                                "lld_macro": "{#GCP.PROJECT.ID}",
                                "path": "$.project_id"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "3h"
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "1a0dc88bc40d45af90ca761dcb611bf0",
                        "name": "GCP Compute Engine: Project quotas discovery",
                        "type": "DEPENDENT",
                        "key": "gcp.gce.quotas.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#GCE.QUOTA.NAME}",
                                    "value": "{$GCP.GCE.QUOTA.MATCHES}",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#GCE.QUOTA.NAME}",
                                    "value": "{$GCP.GCE.QUOTA.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "B"
                                }
                            ]
                        },
                        "description": "GCP Compute Engine: Quotas discovery.",
                        "item_prototypes": [
                            {
                                "uuid": "1e9a772b9a89497ba695079fc480bd0a",
                                "name": "Quota [{#GCE.QUOTA.NAME}]: Limit",
                                "type": "DEPENDENT",
                                "key": "gcp.gce.quota.limit[{#GCE.QUOTA.NAME}]",
                                "delay": "0",
                                "history": "7d",
                                "trends": "90d",
                                "description": "GCP Compute Engine: The current limit value for [{#GCE.QUOTA.NAME}] quota.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.limit"
                                        ]
                                    }
                                ],
                                "master_item": {
                                    "key": "gcp.gce.quota.single.raw[{#GCE.QUOTA.NAME}]"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "quota"
                                    },
                                    {
                                        "tag": "quota",
                                        "value": "{#GCE.QUOTA.NAME}"
                                    }
                                ],
                                "trigger_prototypes": [
                                    {
                                        "uuid": "ac0d8842f0934dcead56d41f328c10d2",
                                        "expression": "change(/GCP by HTTP/gcp.gce.quota.limit[{#GCE.QUOTA.NAME}]) <> 0",
                                        "name": "Quota [{#GCE.QUOTA.NAME}] limit has been changed",
                                        "opdata": "Current limit: {ITEM.VALUE}",
                                        "priority": "INFO",
                                        "description": "GCP Compute Engine: The limit for the `{#GCE.QUOTA.NAME}` quota has been changed.",
                                        "manual_close": "YES",
                                        "tags": [
                                            {
                                                "tag": "scope",
                                                "value": "capacity"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "uuid": "6bb3700f7c5c4c51b6a435f5c7d0e315",
                                "name": "Quota [{#GCE.QUOTA.NAME}]: Percentage used",
                                "type": "DEPENDENT",
                                "key": "gcp.gce.quota.pused[{#GCE.QUOTA.NAME}]",
                                "delay": "0",
                                "history": "7d",
                                "value_type": "FLOAT",
                                "trends": "90d",
                                "units": "%",
                                "description": "GCP Compute Engine: Percentage usage for [{#GCE.QUOTA.NAME}] quota.",
                                "preprocessing": [
                                    {
                                        "type": "CHECK_NOT_SUPPORTED",
                                        "parameters": [
                                            "-1"
                                        ]
                                    },
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.p_used"
                                        ]
                                    }
                                ],
                                "master_item": {
                                    "key": "gcp.gce.quota.single.raw[{#GCE.QUOTA.NAME}]"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "quota"
                                    },
                                    {
                                        "tag": "quota",
                                        "value": "{#GCE.QUOTA.NAME}"
                                    }
                                ],
                                "trigger_prototypes": [
                                    {
                                        "uuid": "ecce0204198d4edda88f84d4f25ba75c",
                                        "expression": "last(/GCP by HTTP/gcp.gce.quota.pused[{#GCE.QUOTA.NAME}]) >= {$GCP.GCE.QUOTA.PUSED.MIN.WARN:\"{#GCE.QUOTA.NAME}\"}",
                                        "name": "Quota [{#GCE.QUOTA.NAME}] usage is close to reaching the limit",
                                        "opdata": "Usage: {#GCE.QUOTA.USAGE} | Limit: {#GCE.QUOTA.LIMIT} | Percentage {ITEM.VALUE}%",
                                        "priority": "WARNING",
                                        "description": "GCP Compute Engine: The usage percentage for the `{#GCE.QUOTA.NAME}` quota is close to reaching the limit.",
                                        "manual_close": "YES",
                                        "dependencies": [
                                            {
                                                "name": "Quota [{#GCE.QUOTA.NAME}] usage is critically close to reaching the limit",
                                                "expression": "last(/GCP by HTTP/gcp.gce.quota.pused[{#GCE.QUOTA.NAME}]) >= {$GCP.GCE.QUOTA.PUSED.MIN.CRIT:\"{#GCE.QUOTA.NAME}\"}"
                                            }
                                        ],
                                        "tags": [
                                            {
                                                "tag": "scope",
                                                "value": "capacity"
                                            }
                                        ]
                                    },
                                    {
                                        "uuid": "bc894d5e4f694e428fcb32babe87c204",
                                        "expression": "last(/GCP by HTTP/gcp.gce.quota.pused[{#GCE.QUOTA.NAME}]) >= {$GCP.GCE.QUOTA.PUSED.MIN.CRIT:\"{#GCE.QUOTA.NAME}\"}",
                                        "name": "Quota [{#GCE.QUOTA.NAME}] usage is critically close to reaching the limit",
                                        "opdata": "Usage: {#GCE.QUOTA.USAGE} | Limit: {#GCE.QUOTA.LIMIT} | Percentage {ITEM.VALUE}%",
                                        "priority": "AVERAGE",
                                        "description": "GCP Compute Engine: The usage percentage for the `{#GCE.QUOTA.NAME}` quota is critically close to reaching the limit.",
                                        "manual_close": "YES",
                                        "tags": [
                                            {
                                                "tag": "scope",
                                                "value": "capacity"
                                            },
                                            {
                                                "tag": "scope",
                                                "value": "notice"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "uuid": "a439501636fd49f0aaf3902300d943b8",
                                "name": "Quota [{#GCE.QUOTA.NAME}]: Raw data",
                                "type": "DEPENDENT",
                                "key": "gcp.gce.quota.single.raw[{#GCE.QUOTA.NAME}]",
                                "delay": "0",
                                "history": "0",
                                "value_type": "TEXT",
                                "trends": "0",
                                "description": "GCP Compute Engine: Get metrics for [{#GCE.QUOTA.NAME}] quota.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$[?(@.metric == \"{#GCE.QUOTA.NAME}\")].first()"
                                        ]
                                    }
                                ],
                                "master_item": {
                                    "key": "gcp.gce.quotas.get"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "raw"
                                    },
                                    {
                                        "tag": "quota",
                                        "value": "{#GCE.QUOTA.NAME}"
                                    }
                                ]
                            },
                            {
                                "uuid": "936c66cc59a240858f67922dcba2cbec",
                                "name": "Quota [{#GCE.QUOTA.NAME}]: Usage",
                                "type": "DEPENDENT",
                                "key": "gcp.gce.quota.usage[{#GCE.QUOTA.NAME}]",
                                "delay": "0",
                                "history": "7d",
                                "trends": "90d",
                                "description": "GCP Compute Engine: The current usage value for [{#GCE.QUOTA.NAME}] quota.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.usage"
                                        ]
                                    }
                                ],
                                "master_item": {
                                    "key": "gcp.gce.quota.single.raw[{#GCE.QUOTA.NAME}]"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "quota"
                                    },
                                    {
                                        "tag": "quota",
                                        "value": "{#GCE.QUOTA.NAME}"
                                    }
                                ]
                            }
                        ],
                        "graph_prototypes": [
                            {
                                "uuid": "45de6eacbed84c82bfe9175fcf84e0c3",
                                "name": "GCP Compute Engine: Quota [{#GCE.QUOTA.NAME}]: Usage",
                                "graph_items": [
                                    {
                                        "drawtype": "GRADIENT_LINE",
                                        "color": "199C0D",
                                        "item": {
                                            "host": "GCP by HTTP",
                                            "key": "gcp.gce.quota.usage[{#GCE.QUOTA.NAME}]"
                                        }
                                    },
                                    {
                                        "sortorder": "1",
                                        "drawtype": "BOLD_LINE",
                                        "color": "F63100",
                                        "calc_fnc": "MIN",
                                        "item": {
                                            "host": "GCP by HTTP",
                                            "key": "gcp.gce.quota.limit[{#GCE.QUOTA.NAME}]"
                                        }
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "gcp.gce.quotas.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#GCE.QUOTA.LIMIT}",
                                "path": "$.limit"
                            },
                            {
                                "lld_macro": "{#GCE.QUOTA.NAME}",
                                "path": "$.metric"
                            },
                            {
                                "lld_macro": "{#GCE.QUOTA.USAGE}",
                                "path": "$.usage"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "3h"
                                ]
                            }
                        ]
                    }
                ],
                "tags": [
                    {
                        "tag": "class",
                        "value": "cloud"
                    },
                    {
                        "tag": "target",
                        "value": "gcp"
                    },
                    {
                        "tag": "target",
                        "value": "google-cloud-platform"
                    }
                ],
                "macros": [
                    {
                        "macro": "{$GCP.AUTH.FREQUENCY}",
                        "value": "45m",
                        "description": "The update interval for the GCP Authorization item, which also equals to the access token regeneration request frequency.\nCheck the template documentation notes carefully for more details."
                    },
                    {
                        "macro": "{$GCP.CLIENT.EMAIL}",
                        "description": "Service account client e-mail."
                    },
                    {
                        "macro": "{$GCP.DATA.TIMEOUT}",
                        "value": "15s",
                        "description": "A response timeout for an API."
                    },
                    {
                        "macro": "{$GCP.GCE.INST.NAME.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Compute Engine instances by namespace."
                    },
                    {
                        "macro": "{$GCP.GCE.INST.NAME.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Compute Engine instances by namespace."
                    },
                    {
                        "macro": "{$GCP.GCE.QUOTA.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Compute Engine project quotas by namespace."
                    },
                    {
                        "macro": "{$GCP.GCE.QUOTA.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Compute Engine project quotas by namespace."
                    },
                    {
                        "macro": "{$GCP.GCE.QUOTA.PUSED.MIN.CRIT}",
                        "value": "95",
                        "description": "GCP Compute Engine project quota critical quota utilization threshold."
                    },
                    {
                        "macro": "{$GCP.GCE.QUOTA.PUSED.MIN.WARN}",
                        "value": "80",
                        "description": "GCP Compute Engine project quota warning utilization threshold."
                    },
                    {
                        "macro": "{$GCP.GCE.ZONE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Compute Engine instances by zone."
                    },
                    {
                        "macro": "{$GCP.GCE.ZONE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Compute Engine instances by zone."
                    },
                    {
                        "macro": "{$GCP.MSSQL.INST.NAME.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MSSQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.MSSQL.INST.NAME.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MSSQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.MSSQL.INST.TYPE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MSSQL instances by type (standalone/replica)."
                    },
                    {
                        "macro": "{$GCP.MSSQL.INST.TYPE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MSSQL instances by type (standalone/replica).\nSet a macro value 'CLOUD_SQL_INSTANCE' to exclude standalone Instances or 'READ_REPLICA_INSTANCE' to exclude read-only Replicas."
                    },
                    {
                        "macro": "{$GCP.MSSQL.ZONE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MSSQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.MSSQL.ZONE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MSSQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.MYSQL.INST.NAME.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MySQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.MYSQL.INST.NAME.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MySQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.MYSQL.INST.TYPE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MySQL instances by type (standalone/replica)."
                    },
                    {
                        "macro": "{$GCP.MYSQL.INST.TYPE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MySQL instances by type (standalone/replica).\nSet a macro value 'CLOUD_SQL_INSTANCE' to exclude standalone Instances or 'READ_REPLICA_INSTANCE' to exclude read-only Replicas."
                    },
                    {
                        "macro": "{$GCP.MYSQL.ZONE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL MySQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.MYSQL.ZONE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL MySQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.PGSQL.INST.NAME.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL PostgreSQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.PGSQL.INST.NAME.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL PostgreSQL instances by namespace."
                    },
                    {
                        "macro": "{$GCP.PGSQL.INST.TYPE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL PostgreSQL instances by type (standalone/replica)."
                    },
                    {
                        "macro": "{$GCP.PGSQL.INST.TYPE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL PostgreSQL instances by type (standalone/replica).\nSet a macro value 'CLOUD_SQL_INSTANCE' to exclude standalone Instances or 'READ_REPLICA_INSTANCE' to exclude read-only Replicas."
                    },
                    {
                        "macro": "{$GCP.PGSQL.ZONE.MATCHES}",
                        "value": ".*",
                        "description": "The filter to include GCP Cloud SQL PostgreSQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.PGSQL.ZONE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "The filter to exclude GCP Cloud SQL PostgreSQL instances by zone."
                    },
                    {
                        "macro": "{$GCP.PRIVATE.KEY}",
                        "type": "SECRET_TEXT",
                        "description": "Service account private key data."
                    },
                    {
                        "macro": "{$GCP.PRIVATE.KEY.ID}",
                        "type": "SECRET_TEXT",
                        "description": "Service account private key id."
                    },
                    {
                        "macro": "{$GCP.PROJECT.ID}",
                        "description": "GCP project ID."
                    },
                    {
                        "macro": "{$GCP.PROXY}",
                        "description": "Sets HTTP proxy value. If this macro is empty then no proxy is used."
                    }
                ],
                "dashboards": [
                    {
                        "uuid": "71df4601171e471ea74a291242028394",
                        "name": "Project resources",
                        "pages": [
                            {
                                "name": "Project resources",
                                "widgets": [
                                    {
                                        "type": "item",
                                        "name": "GCE instances total",
                                        "width": "24",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.total"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "Cloud SQL total",
                                        "y": "5",
                                        "width": "18",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.cloudsql.instances.total"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "graphprototype",
                                        "y": "10",
                                        "width": "36",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "columns",
                                                "value": "1"
                                            },
                                            {
                                                "type": "GRAPH_PROTOTYPE",
                                                "name": "graphid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "name": "GCP Compute Engine: Quota [{#GCE.QUOTA.NAME}]: Usage"
                                                }
                                            },
                                            {
                                                "type": "STRING",
                                                "name": "reference",
                                                "value": "AAAAA"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "Cloud SQL MySQL",
                                        "x": "18",
                                        "y": "5",
                                        "width": "18",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.mysql_count"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "GCE regular instances",
                                        "x": "24",
                                        "width": "24",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.regular_count"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "Cloud SQL PostgreSQL",
                                        "x": "36",
                                        "y": "5",
                                        "width": "18",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.pgsql_count"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "graphprototype",
                                        "x": "36",
                                        "y": "10",
                                        "width": "36",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "columns",
                                                "value": "1"
                                            },
                                            {
                                                "type": "ITEM_PROTOTYPE",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.quota.pused[{#GCE.QUOTA.NAME}]"
                                                }
                                            },
                                            {
                                                "type": "STRING",
                                                "name": "reference",
                                                "value": "AAAAB"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "source_type",
                                                "value": "3"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "GCE COS instances",
                                        "x": "48",
                                        "width": "24",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.cos_count"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "item",
                                        "name": "Cloud SQL MSSQL",
                                        "x": "54",
                                        "y": "5",
                                        "width": "18",
                                        "height": "5",
                                        "fields": [
                                            {
                                                "type": "INTEGER",
                                                "name": "decimal_places",
                                                "value": "0"
                                            },
                                            {
                                                "type": "ITEM",
                                                "name": "itemid.0",
                                                "value": {
                                                    "host": "GCP by HTTP",
                                                    "key": "gcp.gce.instances.mssql_count"
                                                }
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.0",
                                                "value": "2"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "show.1",
                                                "value": "4"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    }
}