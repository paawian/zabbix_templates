{
    "zabbix_export": {
        "version": "7.0",
        "template_groups": [
            {
                "uuid": "c2c162144c2d4c5491c8801193af4945",
                "name": "Templates/Cloud"
            }
        ],
        "templates": [
            {
                "uuid": "dce23cdaef364e139efa580d8a304ffe",
                "template": "AWS Cost Explorer by HTTP",
                "name": "AWS Cost Explorer by HTTP",
                "description": "The template gets AWS Cost Explorer metrics and uses the script item to make HTTP requests to the Cost Explorer API.\nThe Cost Explorer API can access the historical data over up to 12 months and the data for current month.\nDon't forget to read the README.md for the correct setup of the template.\n\nYou can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback\n\nGenerated by official Zabbix template tool \"Templator\"",
                "vendor": {
                    "name": "Zabbix",
                    "version": "7.0-0"
                },
                "groups": [
                    {
                        "name": "Templates/Cloud"
                    }
                ],
                "items": [
                    {
                        "uuid": "5bfda2617dfc43edbe524a5c44b39f18",
                        "name": "Get daily costs",
                        "type": "SCRIPT",
                        "key": "aws.get.daily.costs",
                        "delay": "0s;h/6",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "params": "var AWS = {\n\tparams: {},\n\tmetadata: 'http://169.254.169.254/latest/meta-data/iam/security-credentials',\n\n\tsetParams: function (params) {\n\t\tAWS.params['proxy'] = params.proxy;\n\t\tswitch (AWS.getField(params, 'auth_type')) {\n\t\t\tcase 'role_base':\n\t\t\t\tAWS.params['auth_type'] = 'role_base';\n\t\t\t\tvar request = new HttpRequest();\n\t\t\t\tif (typeof AWS.params.proxy !== 'undefined' && AWS.params.proxy !== '') {\n\t\t\t\t\trequest.setProxy(AWS.params.proxy);\n\t\t\t\t}\n\t\t\t\tvar IamRoleName = request.get(AWS.metadata);\n\n\t\t\t\tif (request.getStatus() !== 200 || IamRoleName === null || IamRoleName === '') {\n\t\t\t\t\tthrow 'Error getting security credentials from instance metadata. Role not found.';\n\t\t\t\t}\n\n\t\t\t\tcredentials = request.get(AWS.metadata + '/' + encodeURI(IamRoleName));\n\n\t\t\t\tif (request.getStatus() !== 200 || credentials === null || credentials === '') {\n\t\t\t\t\tthrow 'Error getting security credentials from instance metadata.';\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tcredentials = JSON.parse(credentials);\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\tthrow 'Failed to parse response received from instance metadata. Check debug log for more information.';\n\t\t\t\t}\n\n\t\t\t\t['AccessKeyId', 'SecretAccessKey', 'Token'].forEach(function (field) {\n\t\t\t\t\tif (typeof credentials !== 'object' || typeof credentials[field] === 'undefined' || credentials[field] === '') {\n\t\t\t\t\t\tthrow 'Required credentials is not set: \"' + field + '\".';\n\t\t\t\t\t};\n\t\t\t\t\tAWS.params[field] = credentials[field];\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'access_key':\n\t\t\tdefault:\n\t\t\t\tAWS.params['auth_type'] = 'access_key';\n\t\t\t\t['AccessKeyId', 'SecretAccessKey'].forEach(function (field) {\n\t\t\t\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\t\t\t\tthrow 'Required param is not set: \"' + field + '\".';\n\t\t\t\t\t}\n\t\t\t\t\tAWS.params[field] = params[field];\n\t\t\t\t});\n\t\t}\n\t\t['region'].forEach(function (field) {\n\t\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\t\tthrow 'Required param is not set: \"' + field + '\".';\n\t\t\t}\n\t\t\tAWS.params[field] = params[field];\n\t\t});\n\n\t\ttoday = new Date();\n\t\tAWS.params.end_date = today.toDateString();\n\t\ttoday.setDate(today.getDate() - 1);\n\t\tAWS.params.start_time = today.toDateString();\n\t},\n\n\tsign: function (key, message) {\n\t\tvar hex = hmac('sha256', key, message);\n\n\t\tif ((hex.length % 2) === 1) {\n\t\t\tthrow 'Invalid length of a hex string!';\n\t\t}\n\n\t\tvar result = new Int8Array(hex.length / 2);\n\t\tfor (var i = 0, b = 0; i < hex.length; i += 2, b++) {\n\t\t\tresult[b] = parseInt(hex.substring(i, i + 2), 16);\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tgetField: function (data, path) {\n\t\tvar steps = path.split('.');\n\t\tfor (var i = 0; i < steps.length; i++) {\n\t\t\tvar step = steps[i];\n\t\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\t\tthrow 'Required field was not found: ' + path;\n\t\t\t}\n\t\t\tdata = data[step];\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\trequest: function (method, region, service, host, data, uri, target) {\n\t\tif (typeof data === 'undefined' || data === null) {\n\t\t\tdata = '';\n\t\t}\n\n\t\tvar amzdate = (new Date()).toISOString().replace(/\\.\\d+Z/, 'Z').replace(/[-:]/g, ''),\n\t\t\tdate = amzdate.replace(/T\\d+Z/, ''),\n\n\t\t\tcanonical_uri = '/' + uri,\n\t\t\tcanonical_headers = 'content-encoding:amz-1.0\\n' + 'host:' + host + '\\n' + 'x-amz-date:' + amzdate + '\\n',\n\t\t\tsigned_headers = 'content-encoding;host;x-amz-date',\n\t\t\tcanonical_request = method + '\\n' + canonical_uri + '\\n' + '' + '\\n' + canonical_headers + '\\n' + signed_headers + '\\n' + sha256(data),\n\t\t\tcredential_scope = date + '/' + region + '/' + service + '/' + 'aws4_request',\n\t\t\trequest_string = 'AWS4-HMAC-SHA256' + '\\n' + amzdate + '\\n' + credential_scope + '\\n' + sha256(canonical_request),\n\t\t\tkey = AWS.sign('AWS4' + AWS.params.SecretAccessKey, date);\n\n\t\tkey = AWS.sign(key, region);\n\t\tkey = AWS.sign(key, service);\n\t\tkey = AWS.sign(key, 'aws4_request');\n\n\t\tvar request = new HttpRequest(),\n\t\t\turl = 'https://' + host + canonical_uri;\n\n\t\tif (typeof AWS.params.proxy !== 'undefined' && AWS.params.proxy !== '') {\n\t\t\trequest.setProxy(AWS.params.proxy);\n\t\t}\n\t\trequest.addHeader('x-amz-date: ' + amzdate);\n\t\trequest.addHeader('x-amz-content-sha256:' + sha256(data));\n\t\trequest.addHeader('Accept: application/json');\n\t\trequest.addHeader('Content-Type: application/x-amz-json-1.1');\n\t\trequest.addHeader('Content-Encoding: amz-1.0');\n\t\trequest.addHeader('X-Amz-Target: ' + target);\n\t\trequest.addHeader('Authorization: ' + 'AWS4-HMAC-SHA256 Credential=' + AWS.params.AccessKeyId + '/' + credential_scope + ', ' + 'SignedHeaders=' + signed_headers + ', ' + 'Signature=' + hmac('sha256', key, request_string));\n\t\tif (AWS.params.auth_type === 'role_base')\n\t\t\trequest.addHeader('X-Amz-Security-Token: ' + AWS.params.Token);\n\n\t\tZabbix.log(4, '[ AWS Billing ] Sending request: ' + url);\n\n\t\tresponse = request.post(url, data);\n\n\t\tZabbix.log(4, '[ AWS Billing ] Received response with the status code ' + request.getStatus() + ': ' + response);\n\n\t\tif (request.getStatus() !== 200) {\n\t\t\tthrow 'Request failed with the status code ' + request.getStatus() + ': ' + response;\n\t\t}\n\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse the response received from AWS API. Check debug log for more information.';\n\t\t}\n\n\t\treturn response;\n\t},\n\n\tgetDimensionValues: function () {\n\t\tvar body_raw_dimension = {\n\t\t\t'TimePeriod': {\n\t\t\t\t'Start': AWS.params.start_time,\n\t\t\t\t'End': AWS.params.end_date\n\t\t\t},\n\t\t\t'Dimension': 'SERVICE'\n\t\t};\n\t\treturn AWS.getField(AWS.request('POST', AWS.params.region, 'ce', 'ce.' + AWS.params.region + '.amazonaws.com', JSON.stringify(body_raw_dimension), '', 'AWSInsightsIndexService.GetDimensionValues'), 'DimensionValues');\n\n\t},\n\n\tgetCostAndUsage: function () {\n\t\tvar body_raw_cost = {\n\n\t\t\t'TimePeriod': {\n\t\t\t\t'Start': AWS.params.start_time,\n\t\t\t\t'End': AWS.params.end_date\n\t\t\t},\n\t\t\t'Granularity': 'DAILY',\n\t\t\t'DimensionValues': AWS.getDimensionValues(),\n\t\t\t'GroupBy': [\n\t\t\t\t{\n\t\t\t\t\t'Type': 'DIMENSION',\n\t\t\t\t\t'Key': 'SERVICE'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'Metrics': ['BlendedCost']\n\t\t};\n\n\t\treturn AWS.getField(AWS.request('POST', AWS.params.region, 'ce', 'ce.' + AWS.params.region + '.amazonaws.com', JSON.stringify(body_raw_cost), '', 'AWSInsightsIndexService.GetCostAndUsage'), 'ResultsByTime');\n\n\t}\n\n};\n\ntry {\n\tAWS.setParams(JSON.parse(value));\n\n\treturn JSON.stringify(AWS.getCostAndUsage());\n\n}\ncatch (error) {\n\terror += (String(error).endsWith('.')) ? '' : '.';\n\tZabbix.log(3, '[ AWS Billing ] ERROR: ' + error);\n\n\treturn JSON.stringify({ 'error': error });\n}",
                        "description": "Get raw data on the daily costs by service",
                        "preprocessing": [
                            {
                                "type": "CHECK_NOT_SUPPORTED",
                                "parameters": [
                                    "-1"
                                ]
                            }
                        ],
                        "timeout": "15s",
                        "parameters": [
                            {
                                "name": "AccessKeyId",
                                "value": "{$AWS.ACCESS.KEY.ID}"
                            },
                            {
                                "name": "auth_type",
                                "value": "{$AWS.AUTH_TYPE}"
                            },
                            {
                                "name": "proxy",
                                "value": "{$AWS.PROXY}"
                            },
                            {
                                "name": "region",
                                "value": "{$AWS.BILLING.REGION}"
                            },
                            {
                                "name": "SecretAccessKey",
                                "value": "{$AWS.SECRET.ACCESS.KEY}"
                            }
                        ],
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    },
                    {
                        "uuid": "7139ce562d3c439e9686ad5b17ed0f1c",
                        "name": "Get monthly costs",
                        "type": "SCRIPT",
                        "key": "aws.get.monthly.costs",
                        "delay": "0s;h9",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "params": "var AWS = {\n\tparams: {},\n\tmetadata: 'http://169.254.169.254/latest/meta-data/iam/security-credentials',\n\n\tsetParams: function (params) {\n\t\tAWS.params['proxy'] = params.proxy;\n\t\tswitch (AWS.getField(params, 'auth_type')) {\n\t\t\tcase 'role_base':\n\t\t\t\tAWS.params['auth_type'] = 'role_base';\n\t\t\t\tvar request = new HttpRequest();\n\t\t\t\tif (typeof AWS.params.proxy !== 'undefined' && AWS.params.proxy !== '') {\n\t\t\t\t\trequest.setProxy(AWS.params.proxy);\n\t\t\t\t}\n\t\t\t\tvar IamRoleName = request.get(AWS.metadata);\n\n\t\t\t\tif (request.getStatus() !== 200 || IamRoleName === null || IamRoleName === '') {\n\t\t\t\t\tthrow 'Error getting security credentials from instance metadata. Role not found.';\n\t\t\t\t}\n\n\t\t\t\tcredentials = request.get(AWS.metadata + '/' + encodeURI(IamRoleName));\n\n\t\t\t\tif (request.getStatus() !== 200 || credentials === null || credentials === '') {\n\t\t\t\t\tthrow 'Error getting security credentials from instance metadata.';\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tcredentials = JSON.parse(credentials);\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\tthrow 'Failed to parse response received from instance metadata. Check debug log for more information.';\n\t\t\t\t}\n\n\t\t\t\t['AccessKeyId', 'SecretAccessKey', 'Token'].forEach(function (field) {\n\t\t\t\t\tif (typeof credentials !== 'object' || typeof credentials[field] === 'undefined' || credentials[field] === '') {\n\t\t\t\t\t\tthrow 'Required credentials is not set: \"' + field + '\".';\n\t\t\t\t\t};\n\t\t\t\t\tAWS.params[field] = credentials[field];\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'access_key':\n\t\t\tdefault:\n\t\t\t\tAWS.params['auth_type'] = 'access_key';\n\t\t\t\t['AccessKeyId', 'SecretAccessKey'].forEach(function (field) {\n\t\t\t\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\t\t\t\tthrow 'Required param is not set: \"' + field + '\".';\n\t\t\t\t\t}\n\t\t\t\t\tAWS.params[field] = params[field];\n\t\t\t\t});\n\t\t}\n\t\t['region', 'month'].forEach(function (field) {\n\t\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\t\tthrow 'Required param is not set: \"' + field + '\".';\n\t\t\t}\n\t\t\tAWS.params[field] = params[field];\n\t\t});\n\n\t\ttoday = new Date();\n\t\tAWS.params.end_date = today.toDateString();\n\t\tmonth = today.getMonth();\n\t\ttoday.setMonth(month - params.month);\n\t\tAWS.params.start_time = new Date(today.getFullYear(), today.getMonth()).toDateString();\n\t},\n\n\tsign: function (key, message) {\n\t\tvar hex = hmac('sha256', key, message);\n\n\t\tif ((hex.length % 2) === 1) {\n\t\t\tthrow 'Invalid length of a hex string!';\n\t\t}\n\n\t\tvar result = new Int8Array(hex.length / 2);\n\t\tfor (var i = 0, b = 0; i < hex.length; i += 2, b++) {\n\t\t\tresult[b] = parseInt(hex.substring(i, i + 2), 16);\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tgetField: function (data, path) {\n\t\tvar steps = path.split('.');\n\t\tfor (var i = 0; i < steps.length; i++) {\n\t\t\tvar step = steps[i];\n\t\t\tif (typeof data !== 'object' || typeof data[step] === 'undefined') {\n\t\t\t\tthrow 'Required field was not found: ' + path;\n\t\t\t}\n\t\t\tdata = data[step];\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\trequest: function (method, region, service, host, data, uri, target) {\n\t\tif (typeof data === 'undefined' || data === null) {\n\t\t\tdata = '';\n\t\t}\n\n\t\tvar amzdate = (new Date()).toISOString().replace(/\\.\\d+Z/, 'Z').replace(/[-:]/g, ''),\n\t\t\tdate = amzdate.replace(/T\\d+Z/, ''),\n\n\t\t\tcanonical_uri = '/' + uri,\n\t\t\tcanonical_headers = 'content-encoding:amz-1.0\\n' + 'host:' + host + '\\n' + 'x-amz-date:' + amzdate + '\\n',\n\t\t\tsigned_headers = 'content-encoding;host;x-amz-date',\n\t\t\tcanonical_request = method + '\\n' + canonical_uri + '\\n' + '' + '\\n' + canonical_headers + '\\n' + signed_headers + '\\n' + sha256(data),\n\t\t\tcredential_scope = date + '/' + region + '/' + service + '/' + 'aws4_request',\n\t\t\trequest_string = 'AWS4-HMAC-SHA256' + '\\n' + amzdate + '\\n' + credential_scope + '\\n' + sha256(canonical_request),\n\t\t\tkey = AWS.sign('AWS4' + AWS.params.SecretAccessKey, date);\n\n\t\tkey = AWS.sign(key, region);\n\t\tkey = AWS.sign(key, service);\n\t\tkey = AWS.sign(key, 'aws4_request');\n\n\t\tvar request = new HttpRequest(),\n\t\t\turl = 'https://' + host + canonical_uri;\n\n\t\tif (typeof AWS.params.proxy !== 'undefined' && AWS.params.proxy !== '') {\n\t\t\trequest.setProxy(AWS.params.proxy);\n\t\t}\n\t\trequest.addHeader('x-amz-date: ' + amzdate);\n\t\trequest.addHeader('x-amz-content-sha256:' + sha256(data));\n\t\trequest.addHeader('Accept: application/json');\n\t\trequest.addHeader('Content-Type: application/x-amz-json-1.1');\n\t\trequest.addHeader('Content-Encoding: amz-1.0');\n\t\trequest.addHeader('X-Amz-Target: ' + target);\n\t\trequest.addHeader('Authorization: ' + 'AWS4-HMAC-SHA256 Credential=' + AWS.params.AccessKeyId + '/' + credential_scope + ', ' + 'SignedHeaders=' + signed_headers + ', ' + 'Signature=' + hmac('sha256', key, request_string));\n\t\tif (AWS.params.auth_type === 'role_base')\n\t\t\trequest.addHeader('X-Amz-Security-Token: ' + AWS.params.Token);\n\n\t\tZabbix.log(4, '[ AWS Billing ] Sending request: ' + url);\n\n\t\tresponse = request.post(url, data);\n\n\t\tZabbix.log(4, '[ AWS Billing ] Received response with the status code ' + request.getStatus() + ': ' + response);\n\n\t\tif (request.getStatus() !== 200) {\n\t\t\tthrow 'Request failed with the status code ' + request.getStatus() + ': ' + response;\n\t\t}\n\n\t\ttry {\n\t\t\tresponse = JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse the response received from AWS API. Check debug log for more information.';\n\t\t}\n\n\t\treturn response;\n\t},\n\n\tgetDimensionValues: function () {\n\t\tvar body_raw_dimension = {\n\t\t\t'TimePeriod': {\n\t\t\t\t'Start': AWS.params.start_time,\n\t\t\t\t'End': AWS.params.end_date\n\t\t\t},\n\t\t\t'Dimension': 'SERVICE'\n\t\t};\n\t\treturn AWS.getField(AWS.request('POST', AWS.params.region, 'ce', 'ce.' + AWS.params.region + '.amazonaws.com', JSON.stringify(body_raw_dimension), '', 'AWSInsightsIndexService.GetDimensionValues'), 'DimensionValues');\n\n\t},\n\n\tgetCostMonth: function () {\n\t\tvar body_raw_cost = {\n\t\t\t'TimePeriod': {\n\t\t\t\t'Start': AWS.params.start_time,\n\t\t\t\t'End': AWS.params.end_date\n\t\t\t},\n\t\t\t'Granularity': 'MONTHLY',\n\t\t\t'Metrics': ['BlendedCost']\n\t\t};\n\t\tresult = AWS.getField(AWS.request('POST', AWS.params.region, 'ce', 'ce.' + AWS.params.region + '.amazonaws.com', JSON.stringify(body_raw_cost), '', 'AWSInsightsIndexService.GetCostAndUsage'), 'ResultsByTime');\n\n\t\treturn result.map(function (data) {\n\t\t\treturn {\n\t\t\t\t'amount': AWS.getField(data, 'Total.BlendedCost.Amount'),\n\t\t\t\t'unit': AWS.getField(data, 'Total.BlendedCost.Unit'),\n\t\t\t\t'month': AWS.getField(data, 'TimePeriod.Start').slice(0, 7)\n\t\t\t};\n\t\t});\n\t},\n\n\tgetCostMonthService: function () {\n\t\tvar body_raw_cost = {\n\t\t\t'TimePeriod': {\n\t\t\t\t'Start': AWS.params.start_time,\n\t\t\t\t'End': AWS.params.end_date\n\t\t\t},\n\t\t\t'DimensionValues': AWS.getDimensionValues(),\n\t\t\t'GroupBy': [\n\t\t\t\t{\n\t\t\t\t\t'Type': 'DIMENSION',\n\t\t\t\t\t'Key': 'SERVICE'\n\t\t\t\t}\n\t\t\t],\n\t\t\t'Granularity': 'MONTHLY',\n\t\t\t'Metrics': ['BlendedCost']\n\t\t};\n\t\tMetricData = AWS.getField(AWS.request('POST', AWS.params.region, 'ce', 'ce.' + AWS.params.region + '.amazonaws.com', JSON.stringify(body_raw_cost), '', 'AWSInsightsIndexService.GetCostAndUsage'), 'ResultsByTime');\n\t\tvar services = [];\n\t\tMetricData.forEach(function (data) {\n\t\t\tmonth = AWS.getField(data, 'TimePeriod.Start').slice(0, 7);\n\t\t\tgroups = AWS.getField(data, 'Groups');\n\t\t\tgroups.forEach(function (group) {\n\t\t\t\tgroup.month = month;\n\t\t\t\tservices.push(group);\n\t\t\t})\n\t\t});\n\n\t\treturn services;\n\n\t}\n\n};\n\ntry {\n\tAWS.setParams(JSON.parse(value));\n\n\tmonthly_costs = AWS.getCostMonth();\n\tmonthly_service_costs = AWS.getCostMonthService();\n\n\treturn JSON.stringify({ monthly_costs, monthly_service_costs });\n\n}\ncatch (error) {\n\terror += (String(error).endsWith('.')) ? '' : '.';\n\tZabbix.log(3, '[ AWS Billing ] ERROR: ' + error);\n\n\treturn JSON.stringify({ 'error': error });\n}",
                        "preprocessing": [
                            {
                                "type": "CHECK_NOT_SUPPORTED",
                                "parameters": [
                                    "-1"
                                ]
                            }
                        ],
                        "timeout": "15s",
                        "parameters": [
                            {
                                "name": "AccessKeyId",
                                "value": "{$AWS.ACCESS.KEY.ID}"
                            },
                            {
                                "name": "auth_type",
                                "value": "{$AWS.AUTH_TYPE}"
                            },
                            {
                                "name": "month",
                                "value": "{$AWS.BILLING.MONTH}"
                            },
                            {
                                "name": "proxy",
                                "value": "{$AWS.PROXY}"
                            },
                            {
                                "name": "region",
                                "value": "{$AWS.BILLING.REGION}"
                            },
                            {
                                "name": "SecretAccessKey",
                                "value": "{$AWS.SECRET.ACCESS.KEY}"
                            }
                        ],
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    }
                ],
                "discovery_rules": [
                    {
                        "uuid": "5773c41da90d4a38aff02fccec733741",
                        "name": "AWS monthly costs by services discovery",
                        "type": "DEPENDENT",
                        "key": "aws.cost.service.monthly.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#AWS.BILLING.SERVICE.NAME}",
                                    "value": "{$AWS.BILLING.LLD.FILTER.SERVICE.MATCHES}",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#AWS.BILLING.SERVICE.NAME}",
                                    "value": "{$AWS.BILLING.LLD.FILTER.SERVICE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "B"
                                }
                            ]
                        },
                        "description": "Discovery of monthly costs by services.",
                        "item_prototypes": [
                            {
                                "uuid": "d01ee8df0e204f1a857b8188df47402a",
                                "name": "[{#AWS.BILLING.SERVICE.NAME}]: Month [{#AWS.BILLING.MONTH}] Blended cost",
                                "type": "DEPENDENT",
                                "key": "aws.monthly.service.cost[\"{#AWS.BILLING.SERVICE.NAME}\", \"{#AWS.BILLING.MONTH}\"]",
                                "delay": "0",
                                "history": "7d",
                                "value_type": "FLOAT",
                                "units": "{#AWS.BILLING.UNIT}",
                                "description": "The monthly cost by service {#AWS.BILLING.SERVICE.NAME}.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.monthly_service_costs.[?(@.month == \"{#AWS.BILLING.MONTH}\")]"
                                        ],
                                        "error_handler": "DISCARD_VALUE"
                                    },
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.[?(@.Keys =~ \"{#AWS.BILLING.SERVICE.NAME}\")]..Metrics.BlendedCost.Amount.first()"
                                        ],
                                        "error_handler": "DISCARD_VALUE"
                                    }
                                ],
                                "master_item": {
                                    "key": "aws.get.monthly.costs"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "billing"
                                    },
                                    {
                                        "tag": "month",
                                        "value": "{#AWS.BILLING.MONTH}"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "{#AWS.BILLING.SERVICE.NAME}"
                                    }
                                ]
                            }
                        ],
                        "graph_prototypes": [
                            {
                                "uuid": "b267e0ae08d34a7dae730848577aea68",
                                "name": "AWS Cost: [{#AWS.BILLING.SERVICE.NAME}]: Month [{#AWS.BILLING.MONTH}] Blended cost",
                                "graph_items": [
                                    {
                                        "drawtype": "GRADIENT_LINE",
                                        "color": "2E7D32",
                                        "item": {
                                            "host": "AWS Cost Explorer by HTTP",
                                            "key": "aws.monthly.service.cost[\"{#AWS.BILLING.SERVICE.NAME}\", \"{#AWS.BILLING.MONTH}\"]"
                                        }
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "aws.get.monthly.costs"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#AWS.BILLING.MONTH}",
                                "path": "$..month.first()"
                            },
                            {
                                "lld_macro": "{#AWS.BILLING.SERVICE.NAME}",
                                "path": "$..Keys.first().first()"
                            },
                            {
                                "lld_macro": "{#AWS.BILLING.UNIT}",
                                "path": "$..Metrics.BlendedCost.Unit.first()"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.monthly_service_costs"
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "6e65d15251ea4355ac41ed7956f9e5b0",
                        "name": "AWS daily costs by services discovery",
                        "type": "DEPENDENT",
                        "key": "aws.daily.services.costs.discovery",
                        "delay": "0",
                        "filter": {
                            "evaltype": "AND",
                            "conditions": [
                                {
                                    "macro": "{#AWS.BILLING.SERVICE.NAME}",
                                    "value": "{$AWS.BILLING.LLD.FILTER.SERVICE.MATCHES}",
                                    "formulaid": "A"
                                },
                                {
                                    "macro": "{#AWS.BILLING.SERVICE.NAME}",
                                    "value": "{$AWS.BILLING.LLD.FILTER.SERVICE.NOT_MATCHES}",
                                    "operator": "NOT_MATCHES_REGEX",
                                    "formulaid": "B"
                                }
                            ]
                        },
                        "description": "Discovery of daily blended costs by services.",
                        "item_prototypes": [
                            {
                                "uuid": "b6e121c3a1eb49858e942beab12660e2",
                                "name": "Service [{#AWS.BILLING.SERVICE.NAME}]: Blended daily cost",
                                "type": "DEPENDENT",
                                "key": "aws.daily.service.cost[\"{#AWS.BILLING.SERVICE.NAME}\"]",
                                "delay": "0",
                                "history": "7d",
                                "value_type": "FLOAT",
                                "units": "{#AWS.BILLING.UNIT}",
                                "description": "The daily blended cost of the {#AWS.BILLING.SERVICE.NAME} service for the previous day.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$..Groups..[?(@.Keys =~ \"{#AWS.BILLING.SERVICE.NAME}\")]..Metrics.BlendedCost.Amount.first()"
                                        ],
                                        "error_handler": "DISCARD_VALUE"
                                    }
                                ],
                                "master_item": {
                                    "key": "aws.get.daily.costs"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "billing"
                                    },
                                    {
                                        "tag": "service",
                                        "value": "{#AWS.BILLING.SERVICE.NAME}"
                                    }
                                ]
                            }
                        ],
                        "graph_prototypes": [
                            {
                                "uuid": "71646982ab55405dbc10f200e8050c93",
                                "name": "AWS Cost: Service [{#AWS.BILLING.SERVICE.NAME}]: Blended daily cost",
                                "graph_items": [
                                    {
                                        "drawtype": "GRADIENT_LINE",
                                        "color": "2E7D32",
                                        "item": {
                                            "host": "AWS Cost Explorer by HTTP",
                                            "key": "aws.daily.service.cost[\"{#AWS.BILLING.SERVICE.NAME}\"]"
                                        }
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "aws.get.daily.costs"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#AWS.BILLING.SERVICE.NAME}",
                                "path": "$..Keys.first().first()"
                            },
                            {
                                "lld_macro": "{#AWS.BILLING.UNIT}",
                                "path": "$..Metrics.BlendedCost.Unit.first()"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$..Groups.first()"
                                ]
                            }
                        ]
                    },
                    {
                        "uuid": "b554f00ba68e4ea391f7c7d029efde4f",
                        "name": "AWS monthly costs discovery",
                        "type": "DEPENDENT",
                        "key": "aws.monthly.cost.discovery",
                        "delay": "0",
                        "description": "Discovery of monthly costs.",
                        "item_prototypes": [
                            {
                                "uuid": "aaf85a53d1804c858fc20189f0483bad",
                                "name": "[{#AWS.BILLING.MONTH}]: Blended cost per month",
                                "type": "DEPENDENT",
                                "key": "aws.monthly.cost[\"{#AWS.BILLING.MONTH}\"]",
                                "delay": "0",
                                "history": "7d",
                                "value_type": "FLOAT",
                                "units": "{#AWS.BILLING.UNIT}",
                                "description": "The blended cost by month {#AWS.BILLING.MONTH}.",
                                "preprocessing": [
                                    {
                                        "type": "JSONPATH",
                                        "parameters": [
                                            "$.monthly_costs.[?(@.month == \"{#AWS.BILLING.MONTH}\")].amount.first()"
                                        ],
                                        "error_handler": "DISCARD_VALUE"
                                    },
                                    {
                                        "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                        "parameters": [
                                            "3h"
                                        ]
                                    }
                                ],
                                "master_item": {
                                    "key": "aws.get.monthly.costs"
                                },
                                "tags": [
                                    {
                                        "tag": "component",
                                        "value": "billing"
                                    },
                                    {
                                        "tag": "month",
                                        "value": "{#AWS.BILLING.MONTH}"
                                    }
                                ]
                            }
                        ],
                        "graph_prototypes": [
                            {
                                "uuid": "3e01a98ed70149e3a6a083bb103aa496",
                                "name": "AWS Cost: [{#AWS.BILLING.MONTH}]: Monthly blended cost",
                                "graph_items": [
                                    {
                                        "drawtype": "GRADIENT_LINE",
                                        "color": "2E7D32",
                                        "item": {
                                            "host": "AWS Cost Explorer by HTTP",
                                            "key": "aws.monthly.cost[\"{#AWS.BILLING.MONTH}\"]"
                                        }
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "aws.get.monthly.costs"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#AWS.BILLING.MONTH}",
                                "path": "$..month.first()"
                            },
                            {
                                "lld_macro": "{#AWS.BILLING.UNIT}",
                                "path": "$..unit.first()"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.monthly_costs"
                                ]
                            }
                        ]
                    }
                ],
                "tags": [
                    {
                        "tag": "class",
                        "value": "software"
                    },
                    {
                        "tag": "target",
                        "value": "aws"
                    },
                    {
                        "tag": "target",
                        "value": "cost"
                    }
                ],
                "macros": [
                    {
                        "macro": "{$AWS.ACCESS.KEY.ID}",
                        "description": "Access key ID."
                    },
                    {
                        "macro": "{$AWS.AUTH_TYPE}",
                        "value": "access_key",
                        "description": "Authorization method. Possible values: role_base, access_key."
                    },
                    {
                        "macro": "{$AWS.BILLING.LLD.FILTER.SERVICE.MATCHES}",
                        "value": ".*",
                        "description": "Filter of discoverable discovered billing service by name."
                    },
                    {
                        "macro": "{$AWS.BILLING.LLD.FILTER.SERVICE.NOT_MATCHES}",
                        "value": "CHANGE_IF_NEEDED",
                        "description": "Filter to exclude discovered billing service by name."
                    },
                    {
                        "macro": "{$AWS.BILLING.MONTH}",
                        "value": "11",
                        "description": "Months to get historical data from AWS Cost Explore API, no more than 12 months."
                    },
                    {
                        "macro": "{$AWS.BILLING.REGION}",
                        "value": "us-east-1",
                        "description": "Amazon Billing region code."
                    },
                    {
                        "macro": "{$AWS.PROXY}",
                        "description": "Sets HTTP proxy value. If this macro is empty, then no proxy is used."
                    },
                    {
                        "macro": "{$AWS.SECRET.ACCESS.KEY}",
                        "type": "SECRET_TEXT",
                        "description": "Secret access key."
                    }
                ],
                "dashboards": [
                    {
                        "uuid": "e1e4edbf129142b4b27a9471db1ed8e2",
                        "name": "Overview AWS Costs",
                        "pages": [
                            {
                                "name": "Monthly costs",
                                "widgets": [
                                    {
                                        "type": "graphprototype",
                                        "width": "72",
                                        "height": "25",
                                        "fields": [
                                            {
                                                "type": "GRAPH_PROTOTYPE",
                                                "name": "graphid.0",
                                                "value": {
                                                    "host": "AWS Cost Explorer by HTTP",
                                                    "name": "AWS Cost: [{#AWS.BILLING.MONTH}]: Monthly blended cost"
                                                }
                                            },
                                            {
                                                "type": "STRING",
                                                "name": "reference",
                                                "value": "AAAAA"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "rows",
                                                "value": "6"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "Monthly costs by service",
                                "widgets": [
                                    {
                                        "type": "graphprototype",
                                        "width": "72",
                                        "height": "25",
                                        "fields": [
                                            {
                                                "type": "GRAPH_PROTOTYPE",
                                                "name": "graphid.0",
                                                "value": {
                                                    "host": "AWS Cost Explorer by HTTP",
                                                    "name": "AWS Cost: [{#AWS.BILLING.SERVICE.NAME}]: Month [{#AWS.BILLING.MONTH}] Blended cost"
                                                }
                                            },
                                            {
                                                "type": "STRING",
                                                "name": "reference",
                                                "value": "AAAAB"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "rows",
                                                "value": "6"
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "name": "Daily costs by service",
                                "widgets": [
                                    {
                                        "type": "graphprototype",
                                        "width": "72",
                                        "height": "20",
                                        "fields": [
                                            {
                                                "type": "GRAPH_PROTOTYPE",
                                                "name": "graphid.0",
                                                "value": {
                                                    "host": "AWS Cost Explorer by HTTP",
                                                    "name": "AWS Cost: Service [{#AWS.BILLING.SERVICE.NAME}]: Blended daily cost"
                                                }
                                            },
                                            {
                                                "type": "STRING",
                                                "name": "reference",
                                                "value": "AAAAC"
                                            },
                                            {
                                                "type": "INTEGER",
                                                "name": "rows",
                                                "value": "5"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    }
}