{
    "zabbix_export": {
        "version": "7.0",
        "template_groups": [
            {
                "uuid": "748ad4d098d447d492bb935c907f652f",
                "name": "Templates/Databases"
            }
        ],
        "host_groups": [
            {
                "uuid": "748ad4d098d447d492bb935c907f652f",
                "name": "Databases"
            }
        ],
        "templates": [
            {
                "uuid": "bc056b1724e748bba50928f8cc605f8e",
                "template": "YugabyteDB by HTTP",
                "name": "YugabyteDB by HTTP",
                "description": "This template is designed for the deployment of YugabyteDB monitoring by Zabbix via HTTP and doesn't require any external scripts.\n\nTo set up the template:\n\n1. Set your account ID as a value of the {$YUGABYTEDB.ACCOUNT.ID} macro. The account ID is the unique identifier for your customer account in YugabyteDB Managed. You can access the account ID from your profile in the YugabyteDB Managed user interface. To get your account ID, log in to YugabyteDB Managed and click the user profile icon. \nSee YugabyteDB documentation for instructions:\nhttps://yugabyte.stoplight.io/docs/managed-apis/tvsjh28t5ivmw-getting-started#account-id\n\n2. Set your project ID as a value of the {$YUGABYTEDB.PROJECT.ID} macro. The project ID is the unique identifier for a YugabyteDB Managed project. You can access the project ID from your profile in the YugabyteDB Managed user interface (along with the account ID). \nSee YugabyteDB documentation for instructions:\nhttps://yugabyte.stoplight.io/docs/managed-apis/tvsjh28t5ivmw-getting-started#project-id\n\n3. Generate the API access token and specify it as a value of the {$YUGABYTEDB.ACCESS.TOKEN} macro. \nSee YugabyteDB documentation for instructions:\nhttps://docs.yugabyte.com/preview/yugabyte-cloud/managed-automation/managed-apikeys/#create-an-api-key\n\nNOTE: If needed, you can specify a HTTP proxy for the template to use by changing the value of the {$YUGABYTEDB.PROXY} user macro.\n\nIMPORTANT! The value of the {$YUGABYTEDB.ACCESS.TOKEN} macro is stored as plain (not secret) text by default.  \n\nGenerated by official Zabbix template tool \"Templator\"",
                "vendor": {
                    "name": "Zabbix",
                    "version": "7.0-0"
                },
                "groups": [
                    {
                        "name": "Templates/Databases"
                    }
                ],
                "items": [
                    {
                        "uuid": "25196b29de6c45c18485f2aefe306818",
                        "name": "Get cluster",
                        "type": "SCRIPT",
                        "key": "yugabytedb.clusters.get",
                        "delay": "1h",
                        "history": "0",
                        "value_type": "TEXT",
                        "trends": "0",
                        "params": "var YugabyteDB = {\n\tparams: {},\n\tclusters: [],\n\terror_msg: '',\n\n\tsetParams: function (params) {\n\t\t['account_id', 'project_id', 'token'].forEach(function (field) {\n\t\t\tif (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {\n\t\t\t\tthrow 'Required param is not set: ' + field + '.';\n\t\t\t}\n\t\t});\n\n\t\tYugabyteDB.params = params;\n\t},\n\n\n\trequest: function (url, data) {\n\t\tif (typeof data === 'undefined' || data === null) {\n\t\t\tdata = '';\n\t\t}\n\n\t\tvar response, request = new HttpRequest();\n\t\tif (typeof YugabyteDB.params.proxy !== 'undefined' && YugabyteDB.params.proxy !== '') {\n\t\t\trequest.setProxy(YugabyteDB.params.proxy);\n\t\t}\n\t\tif (YugabyteDB.params.token) {\n\t\t\trequest.addHeader('Accept: application/json');\n\t\t\trequest.addHeader('Authorization: Bearer ' + YugabyteDB.params.token);\n\t\t}\n\n\t\tZabbix.log(4, '[ YugabyteDB ] Sending request: ' + url);\n\n\t\tresponse = request.get(url);\n\n\t\tZabbix.log(4, '[ YugabyteDB ] Received response with status code ' + request.getStatus() + ': ' + response);\n\n\t\tif (request.getStatus() !== 200 || response === null) {\n\t\t\tthrow 'Request failed with status code ' + request.getStatus() + ': ' + response;\n\t\t}\n\n\t\ttry {\n\t\t\treturn JSON.parse(response);\n\t\t}\n\t\tcatch (error) {\n\t\t\tthrow 'Failed to parse response received from API:' + error;\n\t\t}\n\t}\n\n};\n\ntry {\n\tYugabyteDB.setParams(JSON.parse(value));\n\n\tclusters = YugabyteDB.request(\n\t\t'https://cloud.yugabyte.com/api/public/v1/accounts/' + YugabyteDB.params.account_id + '/projects/' + YugabyteDB.params.project_id + '/clusters'\n\t)\n\n\tYugabyteDB.clusters = clusters.data;\n}\ncatch (error) {\n\tZabbix.log(3, '[ YugabyteDB ] ERROR: ' + error);\n\tYugabyteDB.error_msg = 'Failed to get data from API:' + error;\n}\n\nreturn JSON.stringify({'clusters': YugabyteDB.clusters, 'error': YugabyteDB.error_msg});",
                        "description": "Get raw data about clusters.",
                        "timeout": "10s",
                        "parameters": [
                            {
                                "name": "account_id",
                                "value": "{$YUGABYTEDB.ACCOUNT.ID}"
                            },
                            {
                                "name": "project_id",
                                "value": "{$YUGABYTEDB.PROJECT.ID}"
                            },
                            {
                                "name": "proxy",
                                "value": "{$YUGABYTEDB.PROXY}"
                            },
                            {
                                "name": "token",
                                "value": "{$YUGABYTEDB.ACCESS.TOKEN}"
                            }
                        ],
                        "tags": [
                            {
                                "tag": "component",
                                "value": "raw"
                            }
                        ]
                    },
                    {
                        "uuid": "f5a43644d4d341658b8818077e24ccb3",
                        "name": "Get clusters item error",
                        "type": "DEPENDENT",
                        "key": "yugabytedb.clusters.get.errors",
                        "delay": "0",
                        "history": "7d",
                        "value_type": "TEXT",
                        "trends": "0",
                        "description": "Item for gathering all the cluster item errors.",
                        "preprocessing": [
                            {
                                "type": "JSONPATH",
                                "parameters": [
                                    "$.error"
                                ],
                                "error_handler": "DISCARD_VALUE"
                            },
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "12h"
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "yugabytedb.clusters.get"
                        },
                        "tags": [
                            {
                                "tag": "component",
                                "value": "error"
                            }
                        ],
                        "triggers": [
                            {
                                "uuid": "add4067f699f401887d259ee35b4d654",
                                "expression": "length(last(/YugabyteDB by HTTP/yugabytedb.clusters.get.errors)) > 0",
                                "name": "Failed to fetch data",
                                "priority": "WARNING",
                                "description": "Failed to fetch data about cluster.",
                                "tags": [
                                    {
                                        "tag": "scope",
                                        "value": "availability"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "discovery_rules": [
                    {
                        "uuid": "b882ad93a75046b09794c7f229482006",
                        "name": "Cluster discovery",
                        "type": "DEPENDENT",
                        "key": "yugabytedb.cluster.discovery",
                        "delay": "0",
                        "description": "Discovery of the available clusters.",
                        "host_prototypes": [
                            {
                                "uuid": "1a7ec22ad5ad41e0bcb04c01c2c45e4e",
                                "host": "{#CLUSTER.ID}",
                                "name": "YugabyteDB Cluster [{#CLUSTER.NAME}]",
                                "group_links": [
                                    {
                                        "group": {
                                            "name": "Databases"
                                        }
                                    }
                                ],
                                "templates": [
                                    {
                                        "name": "YugabyteDB Cluster by HTTP"
                                    }
                                ],
                                "macros": [
                                    {
                                        "macro": "{$YUGABYTEDB.CLUSTER.ID}",
                                        "value": "{#CLUSTER.ID}",
                                        "description": "ID of cluster."
                                    },
                                    {
                                        "macro": "{$YUGABYTEDB.CLUSTER.NAME}",
                                        "value": "{#CLUSTER.NAME}",
                                        "description": "Name of cluster."
                                    }
                                ],
                                "tags": [
                                    {
                                        "tag": "cluster",
                                        "value": "{#CLUSTER.NAME}"
                                    }
                                ]
                            }
                        ],
                        "master_item": {
                            "key": "yugabytedb.clusters.get"
                        },
                        "lld_macro_paths": [
                            {
                                "lld_macro": "{#CLUSTER.ID}",
                                "path": "$.cluster_id"
                            },
                            {
                                "lld_macro": "{#CLUSTER.NAME}",
                                "path": "$.cluster_name"
                            }
                        ],
                        "preprocessing": [
                            {
                                "type": "JAVASCRIPT",
                                "parameters": [
                                    "var result = [];\nvar clusters = JSON.parse(value);\n\nfor (var cluster in clusters['clusters']) {\n\tresult.push({\n\t\t\"cluster_id\": clusters['clusters'][cluster]['info']['id'],\n\t\t\"cluster_name\": clusters['clusters'][cluster]['spec']['name']\n\t});\n};\n\nreturn JSON.stringify(result);"
                                ]
                            },
                            {
                                "type": "DISCARD_UNCHANGED_HEARTBEAT",
                                "parameters": [
                                    "1d"
                                ]
                            }
                        ]
                    }
                ],
                "tags": [
                    {
                        "tag": "class",
                        "value": "database"
                    },
                    {
                        "tag": "target",
                        "value": "yugabytedb"
                    }
                ],
                "macros": [
                    {
                        "macro": "{$YUGABYTEDB.ACCESS.TOKEN}",
                        "value": "<Put your access token here>",
                        "description": "Access token for the YugabyteDB API."
                    },
                    {
                        "macro": "{$YUGABYTEDB.ACCOUNT.ID}",
                        "value": "<Put your account ID here>",
                        "description": "YugabyteDB account ID."
                    },
                    {
                        "macro": "{$YUGABYTEDB.PROJECT.ID}",
                        "value": "<Put your project ID here>",
                        "description": "YugabyteDB project ID."
                    },
                    {
                        "macro": "{$YUGABYTEDB.PROXY}",
                        "description": "Sets the HTTP proxy value. If this macro is empty, then no proxy is used."
                    }
                ]
            }
        ]
    }
}